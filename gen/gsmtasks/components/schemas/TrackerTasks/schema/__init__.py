# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import gsmtasks.components.schemas.NestedAddress.schema
import gsmtasks.components.schemas.NestedContact.schema
import gsmtasks.components.schemas.TrackerTasks.properties.duration.schema
import lapidary.runtime
import uuid


class TrackerTasks(lapidary.runtime.ModelBase):
    id: typing.Annotated[
        typing.Union[None, uuid.UUID],
        pydantic.Field(
            alias='id',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    url: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='url',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    NestedContact: typing.Annotated[
        gsmtasks.components.schemas.NestedContact.schema.NestedContact,
        pydantic.Field(
            alias='NestedContact',
        )
    ]

    NestedAddress: typing.Annotated[
        gsmtasks.components.schemas.NestedAddress.schema.NestedAddress,
        pydantic.Field(
            alias='NestedAddress',
        )
    ]

    failed_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='failed_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    TaskStateEnum: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='TaskStateEnum',
        )
    ] = None

    TaskCategoryEnum: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='TaskCategoryEnum',
        )
    ] = None

    assignee: typing.Annotated[
        typing.Union[None, uuid.UUID],
        pydantic.Field(
            alias='assignee',
        )
    ] = None

    duration: typing.Annotated[
        typing.Union[None, gsmtasks.components.schemas.TrackerTasks.properties.duration.schema.duration],
        pydantic.Field(
            alias='duration',
        )
    ] = None

    scheduled_time: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='scheduled_time',
        )
    ] = None

    completed_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='completed_at',
        )
    ] = None

    cancelled_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='cancelled_at',
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
