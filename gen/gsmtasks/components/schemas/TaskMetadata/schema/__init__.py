# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import lapidary.runtime
import uuid


class TaskMetadata(lapidary.runtime.ModelBase):
    id: typing.Annotated[
        typing.Union[None, uuid.UUID],
        pydantic.Field(
            alias='id',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    url: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='url',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    task: typing.Annotated[
        str,
        pydantic.Field(
            alias='task',
        )
    ]

    events_count: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='events_count',
            ge=0.0,
            le=32767.0,
        )
    ] = None

    task_event_notes_count: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='task_event_notes_count',
            ge=0.0,
            le=32767.0,
        )
    ] = None

    documents_count: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='documents_count',
            ge=0.0,
            le=32767.0,
        )
    ] = None

    signatures_count: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='signatures_count',
            ge=0.0,
            le=32767.0,
        )
    ] = None

    forms_count: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='forms_count',
            ge=0.0,
            le=32767.0,
        )
    ] = None

    forms_completed_count: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='forms_completed_count',
            ge=0.0,
            le=32767.0,
        )
    ] = None

    last_task_event_notes: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='last_task_event_notes',
        )
    ] = None

    NullableTaskDuration: typing.Annotated[
        typing.Union[None, int, str],
        pydantic.Field(
            alias='NullableTaskDuration',
        )
    ] = None

    NullableTaskDuration: typing.Annotated[
        typing.Union[None, int, str],
        pydantic.Field(
            alias='NullableTaskDuration',
        )
    ] = None

    NullableTaskDuration: typing.Annotated[
        typing.Union[None, int, str],
        pydantic.Field(
            alias='NullableTaskDuration',
        )
    ] = None

    NullableTaskDuration: typing.Annotated[
        typing.Union[None, int, str],
        pydantic.Field(
            alias='NullableTaskDuration',
        )
    ] = None

    NullableTaskDuration: typing.Annotated[
        typing.Union[None, int, str],
        pydantic.Field(
            alias='NullableTaskDuration',
        )
    ] = None

    NullableTaskDuration: typing.Annotated[
        typing.Union[None, int, str],
        pydantic.Field(
            alias='NullableTaskDuration',
        )
    ] = None

    NullableTaskDuration: typing.Annotated[
        typing.Union[None, int, str],
        pydantic.Field(
            alias='NullableTaskDuration',
        )
    ] = None

    NullableTaskDuration: typing.Annotated[
        typing.Union[None, int, str],
        pydantic.Field(
            alias='NullableTaskDuration',
        )
    ] = None

    unassigned_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='unassigned_distance',
            ge=0.0,
            le=2147483647.0,
        )
    ] = None

    assigned_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='assigned_distance',
            ge=0.0,
            le=2147483647.0,
        )
    ] = None

    accepted_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='accepted_distance',
            ge=0.0,
            le=2147483647.0,
        )
    ] = None

    transit_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='transit_distance',
            ge=0.0,
            le=2147483647.0,
        )
    ] = None

    active_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='active_distance',
            ge=0.0,
            le=2147483647.0,
        )
    ] = None

    completed_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='completed_distance',
            ge=0.0,
            le=2147483647.0,
        )
    ] = None

    failed_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='failed_distance',
            ge=0.0,
            le=2147483647.0,
        )
    ] = None

    cancelled_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='cancelled_distance',
            ge=0.0,
            le=2147483647.0,
        )
    ] = None

    last_unassigned_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='last_unassigned_at',
        )
    ] = None

    last_assigned_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='last_assigned_at',
        )
    ] = None

    last_accepted_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='last_accepted_at',
        )
    ] = None

    last_transit_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='last_transit_at',
        )
    ] = None

    last_active_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='last_active_at',
        )
    ] = None

    last_completed_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='last_completed_at',
        )
    ] = None

    last_failed_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='last_failed_at',
        )
    ] = None

    last_cancelled_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='last_cancelled_at',
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
