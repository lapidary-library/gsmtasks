# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import gsmtasks.components.schemas.NestedAddress.schema
import gsmtasks.components.schemas.NestedContact.schema
import gsmtasks.components.schemas.Task.properties.actions.schema
import gsmtasks.components.schemas.Task.properties.counts.schema
import gsmtasks.components.schemas.Task.properties.duration.schema
import gsmtasks.components.schemas.Task.properties.forms.schema
import gsmtasks.components.schemas.Task.properties.metafields.schema
import lapidary.runtime
import uuid


class Task(lapidary.runtime.ModelBase):
    url: typing.Union[None, str]

    account: str

    order_reference: typing.Union[None, str]

    orderer_name: typing.Union[None, str]

    NestedAddress: gsmtasks.components.schemas.NestedAddress.schema.NestedAddress

    state: typing.Union[None, str]

    completed_at: typing.Union[None, datetime.datetime]

    cancelled_at: typing.Union[None, datetime.datetime]

    assignee_proximity: typing.Union[None, str]

    forms: typing.Union[None, gsmtasks.components.schemas.Task.properties.forms.schema.forms]

    created_by: typing.Union[None, str]

    issues: typing.Union[None, list[str]]

    created_at: typing.Union[None, datetime.datetime]

    updated_at: typing.Union[None, datetime.datetime]

    events: typing.Union[None, str]

    documents: typing.Union[None, str]

    signatures: typing.Union[None, str]

    actions: typing.Union[None, gsmtasks.components.schemas.Task.properties.actions.schema.actions]

    counts: typing.Union[None, gsmtasks.components.schemas.Task.properties.counts.schema.counts]

    id: typing.Union[None, uuid.UUID] = None

    order: typing.Union[None, str] = None

    route: typing.Union[None, str] = None

    external_id: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=100,
        )
    ] = None

    TaskCategoryEnum: typing.Union[None, str] = None

    orderer: typing.Union[None, str] = None

    receiver: typing.Union[None, str] = None

    NestedContact: typing.Union[None, gsmtasks.components.schemas.NestedContact.schema.NestedContact] = None

    description: typing.Union[None, str] = None

    reference: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=100,
        )
    ] = None

    complete_after: typing.Union[None, datetime.datetime] = None

    complete_before: typing.Union[None, datetime.datetime] = None

    scheduled_time: typing.Union[None, datetime.datetime] = None

    assignee: typing.Union[None, str] = None

    auto_assign: typing.Union[None, bool] = None

    position: typing.Annotated[
        typing.Union[None, float],
        pydantic.Field(
            ge=0.0,
            le=253402300799.0,
        )
    ] = None

    priority: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            ge=-2147483648.0,
            le=2147483647.0,
        )
    ] = None

    duration: typing.Union[None, gsmtasks.components.schemas.Task.properties.duration.schema.duration] = None

    size: typing.Union[None, list[int]] = None

    is_full_load: typing.Union[None, bool] = None

    metafields: typing.Union[None, gsmtasks.components.schemas.Task.properties.metafields.schema.metafields] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
