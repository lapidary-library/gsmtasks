# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import gsmtasks.components.schemas.PatchedClient.properties.contact_addresses.items.schema
import lapidary.runtime
import uuid


class PatchedClient(lapidary.runtime.ModelBase):
    id: typing.Annotated[
        typing.Union[None, uuid.UUID],
        pydantic.Field(
            alias='id',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    url: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='url',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    account: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='account',
        )
    ] = None

    name: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='name',
            max_length=200,
        )
    ] = None

    slug: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='slug',
            direction=lapidary.runtime.ParamDirection.read,
            regex=r'^[-a-zA-Z0-9_]+$',
        )
    ] = None

    archived: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='archived',
        )
    ] = None

    created_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='created_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    updated_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='updated_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    contact_addresses: typing.Annotated[
        typing.Union[None, list[gsmtasks.components.schemas.PatchedClient.properties.contact_addresses.items.schema.items]],
        pydantic.Field(
            alias='contact_addresses',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
