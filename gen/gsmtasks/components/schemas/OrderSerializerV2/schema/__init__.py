# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import gsmtasks.components.schemas.NestedContact.schema
import gsmtasks.components.schemas.TaskSerializerV2.schema
import lapidary.runtime
import uuid


class OrderSerializerV2(lapidary.runtime.ModelBase):
    url: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='url',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    account: typing.Annotated[
        str,
        pydantic.Field(
            alias='account',
        )
    ]

    documents: typing.Annotated[
        typing.Union[None, list[str]],
        pydantic.Field(
            alias='documents',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    created_by: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='created_by',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    recurrence: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='recurrence',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    created_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='created_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    updated_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='updated_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    id: typing.Annotated[
        typing.Union[None, uuid.UUID],
        pydantic.Field(
            alias='id',
        )
    ] = None

    external_id: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='external_id',
            max_length=100,
        )
    ] = None

    reference: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='reference',
            max_length=100,
        )
    ] = None

    client: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='client',
        )
    ] = None

    NestedContact: typing.Annotated[
        typing.Union[None, gsmtasks.components.schemas.NestedContact.schema.NestedContact],
        pydantic.Field(
            alias='NestedContact',
        )
    ] = None

    tasks: typing.Annotated[
        typing.Union[None, list[str]],
        pydantic.Field(
            alias='tasks',
        )
    ] = None

    tasks_data: typing.Annotated[
        typing.Union[None, list[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2]],
        pydantic.Field(
            alias='tasks_data',
            direction=lapidary.runtime.ParamDirection.write,
        )
    ] = None

    auto_assign: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='auto_assign',
        )
    ] = None

    description: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='description',
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
