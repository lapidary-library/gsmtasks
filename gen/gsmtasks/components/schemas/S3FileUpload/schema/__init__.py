# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import gsmtasks.components.schemas.S3FileUpload.properties.s3_signature.schema
import lapidary.runtime
import uuid


class S3FileUpload(lapidary.runtime.ModelBase):
    id: typing.Annotated[
        typing.Union[None, uuid.UUID],
        pydantic.Field(
            alias='id',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    url: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='url',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    file: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='file',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    file_name: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='file_name',
            direction=lapidary.runtime.ParamDirection.write,
            max_length=100,
        )
    ]

    file_type: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='file_type',
            direction=lapidary.runtime.ParamDirection.write,
            max_length=100,
        )
    ]

    s3_signature: typing.Annotated[
        typing.Union[None, gsmtasks.components.schemas.S3FileUpload.properties.s3_signature.schema.s3_signature],
        pydantic.Field(
            alias='s3_signature',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    created_by: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='created_by',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    created_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='created_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    updated_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='updated_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    source: typing.Annotated[
        typing.Union[None, str, typing.Any],
        pydantic.Field(
            alias='source',
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
