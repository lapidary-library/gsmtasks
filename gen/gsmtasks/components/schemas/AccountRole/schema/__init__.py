# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import gsmtasks.components.schemas.NestedAddress.schema
import lapidary.runtime
import uuid


class AccountRole(lapidary.runtime.ModelBase):
    id: typing.Annotated[
        typing.Union[None, uuid.UUID],
        pydantic.Field(
            alias='id',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    url: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='url',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    account: typing.Annotated[
        str,
        pydantic.Field(
            alias='account',
        )
    ]

    state: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='state',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    email: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='email',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    signature_image: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='signature_image',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    is_active: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='is_active',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    is_on_duty: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='is_on_duty',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    last_time_location: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='last_time_location',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    activated_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='activated_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    deleted_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='deleted_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    created_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='created_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    updated_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='updated_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    user: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='user',
        )
    ] = None

    display_name: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='display_name',
            max_length=100,
        )
    ] = None

    phone: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='phone',
            max_length=128,
        )
    ] = None

    vehicle_registration_number: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='vehicle_registration_number',
            max_length=32,
        )
    ] = None

    VehicleProfileEnum: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='VehicleProfileEnum',
        )
    ] = None

    vehicle_capacity: typing.Annotated[
        typing.Union[None, list[int]],
        pydantic.Field(
            alias='vehicle_capacity',
        )
    ] = None

    vehicle_speed_factor: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='vehicle_speed_factor',
            regex=r'^-?\d{0,1}(?:\.\d{0,1})?$',
        )
    ] = None

    vehicle_service_time_factor: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='vehicle_service_time_factor',
            regex=r'^-?\d{0,1}(?:\.\d{0,1})?$',
        )
    ] = None

    optimize_return_to_depot: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='optimize_return_to_depot',
        )
    ] = None

    optimize_earliest_start: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='optimize_earliest_start',
        )
    ] = None

    optimize_latest_end: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='optimize_latest_end',
        )
    ] = None

    route_start_address: typing.Annotated[
        typing.Union[None, gsmtasks.components.schemas.NestedAddress.schema.NestedAddress],
        pydantic.Field(
            alias='route_start_address',
        )
    ] = None

    route_end_address: typing.Annotated[
        typing.Union[None, gsmtasks.components.schemas.NestedAddress.schema.NestedAddress],
        pydantic.Field(
            alias='route_end_address',
        )
    ] = None

    is_admin: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='is_admin',
        )
    ] = None

    is_manager: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='is_manager',
        )
    ] = None

    is_worker: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='is_worker',
        )
    ] = None

    is_integration: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='is_integration',
        )
    ] = None

    show_unassigned: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='show_unassigned',
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
