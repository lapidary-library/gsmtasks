# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import gsmtasks.components.schemas.Location.schema
import lapidary.runtime


class NestedAddress(lapidary.runtime.ModelBase):
    geocoded_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='geocoded_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    geocode_failed_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='geocode_failed_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ]

    raw_address: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='raw_address',
            max_length=250,
        )
    ] = None

    formatted_address: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='formatted_address',
            max_length=250,
        )
    ] = None

    location: typing.Annotated[
        typing.Union[None, gsmtasks.components.schemas.Location.schema.Location],
        pydantic.Field(
            alias='location',
        )
    ] = None

    google_place_id: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='google_place_id',
            max_length=250,
        )
    ] = None

    point_of_interest: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='point_of_interest',
            max_length=100,
        )
    ] = None

    street: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='street',
            max_length=200,
        )
    ] = None

    house_number: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='house_number',
            max_length=100,
        )
    ] = None

    apartment_number: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='apartment_number',
            max_length=100,
        )
    ] = None

    city: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='city',
            max_length=100,
        )
    ] = None

    state: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='state',
            max_length=100,
        )
    ] = None

    postal_code: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='postal_code',
            max_length=100,
        )
    ] = None

    country: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='country',
            max_length=100,
        )
    ] = None

    country_code: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='country_code',
            max_length=2,
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
