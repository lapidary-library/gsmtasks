# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import datetime
import lapidary.runtime


class properties(lapidary.runtime.ModelBase):
    model: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='model',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    url: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='url',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    time_location: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='time_location',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    source: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='source',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    user: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='user',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    user_name: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='user_name',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    time: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='time',
        )
    ] = None

    state: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='state',
        )
    ] = None

    heading: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='heading',
        )
    ] = None

    speed: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='speed',
        )
    ] = None

    altitude: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='altitude',
        )
    ] = None

    accuracy: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='accuracy',
            ge=-2147483648.0,
            le=2147483647.0,
        )
    ] = None

    battery_level: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='battery_level',
            regex=r'^-?\d{0,1}(?:\.\d{0,3})?$',
        )
    ] = None

    created_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='created_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    updated_at: typing.Annotated[
        typing.Union[None, datetime.datetime],
        pydantic.Field(
            alias='updated_at',
            direction=lapidary.runtime.ParamDirection.read,
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
