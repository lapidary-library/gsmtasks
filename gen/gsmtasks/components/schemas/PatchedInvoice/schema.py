# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import lapidary.runtime
import pydantic
import typing_extensions as typing
import gsmtasks.components.schemas.InvoiceAccount.schema
import gsmtasks.components.schemas.InvoiceItem.schema


class PatchedInvoice(lapidary.runtime.ModelBase):
    id: typing.Union[None, str] = None

    url: typing.Union[None, str] = None

    account: typing.Union[None, gsmtasks.components.schemas.InvoiceAccount.schema.InvoiceAccount] = None

    billing_method: typing.Union[None, str] = None

    state: typing.Union[None, str] = None

    period: typing.Union[None, list[str]] = None

    total_no_vat: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            pattern=r'^-?\d{0,7}(?:\.\d{0,2})?$',
        )
    ] = None

    total_vat: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            pattern=r'^-?\d{0,7}(?:\.\d{0,2})?$',
        )
    ] = None

    total_with_vat: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            pattern=r'^-?\d{0,7}(?:\.\d{0,2})?$',
        )
    ] = None

    currency: typing.Union[None, str] = None

    vat: typing.Union[None, bool] = None

    due_date: typing.Union[None, str] = None

    paid_at: typing.Union[None, str] = None

    items: typing.Union[None, list[gsmtasks.components.schemas.InvoiceItem.schema.InvoiceItem]] = None

    pricing: typing.Union[None, str] = None

    confirmed_by: typing.Union[None, str] = None

    confirmed_at: typing.Union[None, str] = None

    created_at: typing.Union[None, str] = None

    updated_at: typing.Union[None, str] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
